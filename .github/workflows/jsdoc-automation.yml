name: JSDoc Automation

on:
  workflow_dispatch:
    inputs:
      pull_number:
        description: 'Pull Request Number (optional - if not provided, scans entire directory)'
        required: false
        type: string
      root_directory:
        description: 'Directory to scan (relative to repository root, e.g., packages/core/src)'
        required: true
        default: 'packages/core/src/test_resources'
        type: string
      excluded_directories:
        description: 'Directories to exclude from scanning (comma-separated, relative to root_directory)'
        required: true
        default: 'node_modules,dist,test'
        type: string
      reviewers:
        description: 'Pull Request Reviewers (comma-separated GitHub usernames)'
        required: true
        default: ''
        type: string

jobs:
  generate-docs:
    runs-on: ubuntu-latest

    env:
      GITHUB_ACCESS_TOKEN: ${{ secrets.GH_PAT }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better git operations

      - name: Validate inputs
        run: |
          # Check if root_directory starts with a slash
          if [[ "${{ github.event.inputs.root_directory }}" == /* ]]; then
            echo "Error: root_directory should be relative to repository root (no leading slash)"
            exit 1
          fi

          # Check if root_directory exists
          if [ ! -d "${{ github.event.inputs.root_directory }}" ]; then
            echo "Error: Directory ${{ github.event.inputs.root_directory }} not found"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23.3.0'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Run documentation generator
        run: pnpm start